// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace School_Project_API.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("School_Project_API.Entities.AccessCard", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("ExpirationDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("SerialNo")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.HasKey("Id");

                    b.ToTable("AccessCards");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ExpirationDate = new DateTime(2025, 2, 3, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            SerialNo = "ABCAW"
                        },
                        new
                        {
                            Id = 2,
                            ExpirationDate = new DateTime(2025, 3, 4, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            SerialNo = "ABCAX"
                        },
                        new
                        {
                            Id = 3,
                            ExpirationDate = new DateTime(2025, 4, 5, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            SerialNo = "ABCBW"
                        },
                        new
                        {
                            Id = 4,
                            ExpirationDate = new DateTime(2025, 5, 6, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            SerialNo = "ABCBX"
                        },
                        new
                        {
                            Id = 5,
                            ExpirationDate = new DateTime(2025, 6, 7, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            SerialNo = "ABCCA"
                        },
                        new
                        {
                            Id = 6,
                            ExpirationDate = new DateTime(2025, 7, 8, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            SerialNo = "ABCCX"
                        },
                        new
                        {
                            Id = 7,
                            ExpirationDate = new DateTime(2025, 8, 9, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            SerialNo = "ABCDW"
                        },
                        new
                        {
                            Id = 8,
                            ExpirationDate = new DateTime(2025, 9, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            SerialNo = "ABCDX"
                        },
                        new
                        {
                            Id = 9,
                            ExpirationDate = new DateTime(2025, 10, 11, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            SerialNo = "ABCDE"
                        },
                        new
                        {
                            Id = 10,
                            ExpirationDate = new DateTime(2025, 11, 12, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            SerialNo = "ABCDF"
                        },
                        new
                        {
                            Id = 11,
                            ExpirationDate = new DateTime(2025, 12, 13, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            SerialNo = "ABCDG"
                        },
                        new
                        {
                            Id = 12,
                            ExpirationDate = new DateTime(2026, 1, 14, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            SerialNo = "ABCDH"
                        },
                        new
                        {
                            Id = 13,
                            ExpirationDate = new DateTime(2026, 2, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            SerialNo = "ABCDI"
                        });
                });

            modelBuilder.Entity("School_Project_API.Entities.Department", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.HasKey("Id");

                    b.ToTable("Departments");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "IT"
                        },
                        new
                        {
                            Id = 2,
                            Name = "HR"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Finance"
                        },
                        new
                        {
                            Id = 4,
                            Name = "Marketing"
                        },
                        new
                        {
                            Id = 5,
                            Name = "Sales"
                        },
                        new
                        {
                            Id = 6,
                            Name = "Operations"
                        },
                        new
                        {
                            Id = 7,
                            Name = "Customer Service"
                        },
                        new
                        {
                            Id = 8,
                            Name = "Research & Development"
                        },
                        new
                        {
                            Id = 9,
                            Name = "Legal"
                        },
                        new
                        {
                            Id = 10,
                            Name = "Logistics"
                        });
                });

            modelBuilder.Entity("School_Project_API.Entities.Student", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CardId")
                        .HasColumnType("int");

                    b.Property<DateTime>("DateOfBirth")
                        .HasColumnType("datetime2");

                    b.Property<int>("DepID")
                        .HasColumnType("int");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.HasKey("Id");

                    b.HasIndex("CardId")
                        .IsUnique();

                    b.HasIndex("DepID");

                    b.ToTable("Students", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CardId = 1,
                            DateOfBirth = new DateTime(2003, 3, 3, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DepID = 1,
                            FirstName = "Mohmmad",
                            LastName = "Shiplak"
                        },
                        new
                        {
                            Id = 2,
                            CardId = 2,
                            DateOfBirth = new DateTime(2001, 2, 3, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DepID = 2,
                            FirstName = "Ahmad",
                            LastName = "Salamat"
                        },
                        new
                        {
                            Id = 3,
                            CardId = 3,
                            DateOfBirth = new DateTime(2000, 4, 3, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DepID = 3,
                            FirstName = "Fadi",
                            LastName = "Bani Younes"
                        },
                        new
                        {
                            Id = 4,
                            CardId = 4,
                            DateOfBirth = new DateTime(1990, 8, 3, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DepID = 4,
                            FirstName = "Hamza",
                            LastName = "haj ali"
                        });
                });

            modelBuilder.Entity("School_Project_API.Entities.StudentSubjects", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("StudentId")
                        .HasColumnType("int");

                    b.Property<int>("SubjectId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("StudentId");

                    b.HasIndex("SubjectId");

                    b.ToTable("StudentSubjects");
                });

            modelBuilder.Entity("School_Project_API.Entities.Subject", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("SubjectName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.ToTable("Subjects");
                });

            modelBuilder.Entity("School_Project_API.Entities.Student", b =>
                {
                    b.HasOne("School_Project_API.Entities.AccessCard", "AccessCard")
                        .WithOne("Student")
                        .HasForeignKey("School_Project_API.Entities.Student", "CardId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("School_Project_API.Entities.Department", "Department")
                        .WithMany("Students")
                        .HasForeignKey("DepID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("AccessCard");

                    b.Navigation("Department");
                });

            modelBuilder.Entity("School_Project_API.Entities.StudentSubjects", b =>
                {
                    b.HasOne("School_Project_API.Entities.Student", "Student")
                        .WithMany()
                        .HasForeignKey("StudentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("School_Project_API.Entities.Subject", "Subject")
                        .WithMany()
                        .HasForeignKey("SubjectId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Student");

                    b.Navigation("Subject");
                });

            modelBuilder.Entity("School_Project_API.Entities.AccessCard", b =>
                {
                    b.Navigation("Student")
                        .IsRequired();
                });

            modelBuilder.Entity("School_Project_API.Entities.Department", b =>
                {
                    b.Navigation("Students");
                });
#pragma warning restore 612, 618
        }
    }
}
